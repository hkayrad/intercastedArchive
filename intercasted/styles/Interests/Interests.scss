@import "../imports/import.scss";

* {
	font-size: 10px;
}

body {
	background-color: color(bgColor);

	.photo {
		margin-top: 2vh;
		height: auto;
		width: 18vw;
		margin-left: 79vw;
	}

	.midCard {
		.profilePhoto {
			height: 8vw;
			width: 8vw;
			border: solid 2px;
			border-color: color(primary);
			border-radius: 50%;
			margin-left: 44.95vw;
			background-color: #ffffff;
		}

		.pSelect {
			font-family: $font;
			font-weight: 700;
			color: color(textColor);
			font-size: 2vw;
			margin-left: 38.45vw;
		}
		.search {
			width: 29vw;
			//maybe??
			margin-left: 33.95vw;
			height: 2vw;
			//maybe?
			padding: 0.8vw;
			font-family: $font;
			font-size: 1vw;
			border-radius: 25px;
			border: none;
		}
	}
	.cats {
		.catTitle {
			font-family: $font;
			font-weight: 700;
			color: color(textColor);
			font-size: 2.5rem;
			margin-left: 23.2vw;
		}
		.cat_row {
			margin-left: 21.2vw;
			display: flex;
			flex-direction: row;

			.cat {
				margin-left: 0.5vw;
			}
			.subCat {
				font-family: $font;
				font-weight: 700;
				color: color(textColor);
				//maybe x2
				text-align: center;
				align-self: center;
				font-size: 1vw;
			}
			.catPhoto {
				width: 13vw;
				height: 6vw;
				border-radius: 15px;
				background-size: cover;
			}

			.ms {
				background-image: url("../../img/placeholders/ms.png");
			}

			.ls {
				background-image: url("../../img/placeholders/ls.png");
			}

			.hs {
				background-image: url("../../img/placeholders/hs.png");
			}

			.p {
				background-image: url("../../img/placeholders/p.png");
			}

			.ei {
				background-image: url("../../img/placeholders/ei.png");
			}
		}
	}
	.submitB {
		border: none;
		width: 10.48vw;
		height: 2.5vw;
		background-color: color(primary);
		border-radius: 1.3vw;
		font-family: $font;
		font-size: 2.5rem;
		color: white;
		text-align: center;
		padding: auto;
		margin-top: 1.04vw;
		margin-left: 44.95vw;
	}
}

.container {
	display: block;
	position: relative;
	cursor: pointer;
	font-size: 1.5rem;

	/* Hide the browser's default checkbox */
	input {
		opacity: 0;
		cursor: pointer;
	}
}

/* Create a custom checkbox */
.checkmark {
	position: absolute;
	top: 0;
	left: 0;
	height: 1.5vw;
	width: 1.5vw;
	background-color: #ccc;
	border-radius: 50%;
	margin-top: 7.15vw;
	margin-left: 1.2vw;
	transition: ease 0.3s;
}

/* On mouse-over, add a grey background color */
/* .container:hover input ~ .checkmark {
    background-color: #;
} */

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
	background-color: color(primary);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
	content: "";
	position: absolute;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
	display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
	left: 0.45vw;
	top: 0.25vw;
	width: 0.3vw;
	height: 0.5vw;
	border: solid white;
	border-width: 0 0.16vw 0.16vw 0;
	transform: rotate(45deg);
}
